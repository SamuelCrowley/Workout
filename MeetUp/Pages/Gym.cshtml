@page
@using System.Text.Json
@using System.Text.Json.Serialization
@using MeetUp.Views
@using Microsoft.AspNetCore.Antiforgery
@using static MeetUp.Enums.Enums
@inject IAntiforgery antiforgery
@model GymModel
@{
    ViewData["Title"] = "Chat";
}

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - MeetUp</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>

<div class="container-fluid">
    <div class="position-fixed" style="bottom: 80px; right: 20px; z-index: 1000;">
        <button id="viewHistoryBtn" class="btn btn-info btn-lg rounded-circle"
                style="width: 60px; height: 60px;"
                data-bs-toggle="tooltip" data-bs-placement="left" title="View Workout History">
            <i class="bi bi-clock-history"></i>
        </button>
    </div>

    <div class="position-fixed" style="bottom: 20px; right: 20px; z-index: 1000;">
        <button id="toggleChatBtn" class="btn btn-primary rounded-circle"
                style="width: 60px; height: 60px;"
                data-bs-toggle="collapse"
                data-bs-target="#chatCollapse"
                aria-label="Toggle Chat">
            <i class="bi bi-chat-dots"></i>
        </button>
    </div>

    <input type="hidden" id="__RequestVerificationToken"
           name="__RequestVerificationToken"
           value="@antiforgery.GetAndStoreTokens(HttpContext).RequestToken">

    <div class="row">
        <div class="col-md-6 order-2 order-md-1 p-0">
            <div id="gymTrackerContainer">
                <div id="initialView" class="card m-3 shadow-sm">
                    <div class="card-body text-center">
                        <h4 class="card-title">Ready to work out?</h4>
                        <p class="card-text">Track your progress by starting a workout session.</p>
                        <div class="mb-3" id="workoutNameContainer" style="display: none;">
                            <input type="text" id="workoutNameInput" class="form-control" placeholder="Workout name (e.g., Chest, Push, Legs)">
                        </div>
                        <button class="btn btn-success btn-lg" id="startWorkoutBtn" style="display: none;">
                            <i class="bi bi-play-circle"></i> Start Workout
                        </button>
                        <button class="btn btn-info btn-lg" id="createGymUserBtn" style="display: none;">
                            Create Gym Account
                        </button>
                    </div>
                </div>

                <div id="activeWorkoutView" class="card m-3 shadow-sm" style="display: none;">
                    <div class="card-header bg-primary text-white p-3">
                        <div class="d-flex flex-column gap-3">
                            <div class="card bg-light">
                                <div class="card-body d-flex align-items-center justify-content-between px-3 py-2">
                                    <h4 id="workoutNameDisplay" class="mb-0 text-truncate">Workout</h4>
                                    <button id="endWorkoutBtn" class="btn btn-danger btn-sm">
                                        End Workout
                                    </button>
                                </div>
                            </div>

                            <div id="restTimerContainer" class="card bg-light" style="display: none;">
                                <div class="card-body d-flex align-items-center justify-content-between px-3 py-2">
                                    <div class="d-flex align-items-center gap-2">
                                        <span>Rest:</span>
                                        <span id="restTimerDisplay" class="fw-bold">00:00</span>
                                    </div>
                                    <div class="d-flex align-items-center gap-2">
                                        <div class="btn-group">
                                            <button id="startRestTimerBtn" class="btn btn-sm btn-success">
                                                <i class="bi bi-play-fill"></i>
                                            </button>
                                            <button id="stopRestTimerBtn" class="btn btn-sm btn-danger">
                                                <i class="bi bi-stop-fill"></i>
                                            </button>
                                        </div>
                                        <select id="restTimerDuration" class="form-select form-select-sm" style="width: 80px;">
                                            <option value="30">0:30</option>
                                            <option value="60">1:00</option>
                                            <option value="90" selected>1:30</option>
                                            <option value="120">2:00</option>
                                            <option value="150">2:30</option>
                                            <option value="180">3:00</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card-body">
                        <div class="d-flex justify-content-between mb-3">
                            <div class="text-center">
                                <h5>Duration</h5>
                                <h3 id="workoutTimer">00:00:00</h3>
                            </div>
                            <div class="text-center">
                                <h5>Exercises</h5>
                                <h3 id="exerciseCount">0</h3>
                            </div>
                            <div class="text-center">
                                <h5>Total Sets</h5>
                                <h3 id="totalSets">0</h3>
                            </div>
                        </div>

                        <div id="currentExercises" class="mb-4">
                            <h5>Exercises</h5>
                            <div id="exercisesList" class="list-group"></div>
                        </div>

                        <div class="mb-3">
                            <div class="input-group">
                                <input type="text" id="exerciseNameInput" class="form-control" placeholder="Exercise name (e.g., Bench Press)">
                                <button id="addExerciseBtn" class="btn btn-primary">Add Exercise</button>
                            </div>
                        </div>
                    </div>
                </div>

                <div id="exerciseDetailView" class="card m-3 shadow-sm" style="display: none;">
                    <div class="card-header bg-secondary text-white d-flex justify-content-between align-items-center">
                        <h4 id="exerciseDetailTitle" class="mb-0">Exercise Details</h4>
                        <button id="backToWorkoutBtn" class="btn btn-light btn-sm">Back to Workout</button>
                    </div>

                    <div class="card-body">
                        <div id="setsList" class="mb-3">
                            <h5>Sets</h5>
                            <table class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>Set</th>
                                        <th>Reps</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="setsTableBody"></tbody>
                            </table>
                        </div>
                        <div class="d-grid">
                            <button id="addSetBtn" class="btn btn-primary">Add New Set</button>
                        </div>
                    </div>
                </div>

                <div id="setDetailView" class="card m-3 shadow-sm" style="display: none;">
                    <div class="card-header bg-info text-white d-flex justify-content-between align-items-center">
                        <h4 id="setDetailTitle" class="mb-0">Set Details</h4>
                        <button id="backToExerciseBtn" class="btn btn-light btn-sm">Back to Exercise</button>
                    </div>

                    <div class="card-body">
                        <div class="mb-3">
                            <label for="setWeightInput" class="form-label">Weight (kg)</label>
                            <input type="number" id="setWeightInput" class="form-control" min="0" step="0.5" value="20">
                        </div>

                        <div class="mb-3">
                            <h5>Repetitions</h5>
                            <div class="row g-3 mb-3">
                                <div class="col-md-3">
                                    <label for="repCountInput" class="form-label">Number of Reps</label>
                                    <select id="repCountInput" class="form-select">
                                        @for (int i = 1; i <= 20; i++)
                                        {
                                            <option value="@i" selected="@(i == 6)">@i</option>
                                        }
                                    </select>
                                </div>
                                <div class="col-md-3">
                                    <label for="defaultDifficultyInput" class="form-label">Default Difficulty</label>
                                    <select id="defaultDifficultyInput" class="form-select">
                                        @foreach (var difficulty in Enum.GetValues(typeof(RepetitionDifficulty)))
                                        {
                                            @if (difficulty.ToString() != "Unknown")
                                            {
                                                <option value="@difficulty" selected="@(difficulty.ToString() == "Moderate")">
                                                    @difficulty
                                                </option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="col-md-3 d-flex align-items-end">
                                    <button id="addRepsBtn" class="btn btn-primary w-100">Add Reps</button>
                                </div>
                                <div class="col-md-3 d-flex align-items-end">
                                    <button id="clearRepsBtn" class="btn btn-outline-danger w-100">Clear All</button>
                                </div>
                            </div>
                            <div id="repsList" class="list-group mb-3"></div>
                        </div>
                        <div class="d-grid">
                            <button id="saveSetBtn" class="btn btn-success">Save Set</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6 order-1 order-md-2 p-0">
            <div class="collapse" id="chatCollapse">
                <div class="d-flex flex-column h-100">
                    <div class="p-3 bg-light flex-grow-1">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <h2 class="mb-0">Chat Room</h2>
                            <button class="btn btn-sm btn-secondary"
                                    data-bs-toggle="collapse"
                                    data-bs-target="#chatCollapse">
                                <i class="bi bi-x"></i>
                            </button>
                        </div>
                        <ul id="messagesList" class="list-group mb-3" style="height: calc(100vh - 200px); overflow-y: auto;"></ul>
                        <div class="input-group">
                            <input id="messageInput" type="text" class="form-control" placeholder="Type a message" />
                            <button class="btn btn-primary" onclick="sendMessage()">
                                <i class="bi bi-send"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="historyModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Workout History</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="historyLoading" class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
                <div id="historyContent" style="display: none;">
                    <ul id="workoutSessionsList" class="list-group mb-3"></ul>
                    <div id="workoutDetails" style="display: none;">
                        <h5>Session Details</h5>
                        <div id="sessionExercises" class="mt-3"></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        #messagesList {
            border: 1px solid #ddd;
            border-radius: 4px;
            padding: 10px;
            list-style-type: none;
        }

        .list-group-item {
            margin-bottom: 8px;
            padding: 8px;
            background-color: #f8f9fa;
            border-radius: 4px;
        }

        .exercise-item {
            cursor: pointer;
            transition: background-color 0.2s;
        }

            .exercise-item:hover {
                background-color: #e9ecef;
            }

        #workoutTimer {
            font-family: 'Courier New', monospace;
            font-weight: bold;
        }

        #restTimerContainer {
            min-width: 280px;
        }

        #restTimerDisplay {
            font-family: 'Courier New', monospace;
            font-size: 1.1rem;
        }

        .difficulty-badge {
            cursor: pointer;
            min-width: 100px;
            display: inline-block;
            text-align: center;
            padding: 5px;
            border-radius: 4px;
            margin-right: 5px;
        }

        .Warmup {
            background-color: #0dcaf0;
            color: white;
        }

        .Easy {
            background-color: #198754;
            color: white;
        }

        .Moderate {
            background-color: #ffc107;
            color: black;
        }

        .Difficult {
            background-color: #fd7e14;
            color: white;
        }

        .Extreme {
            background-color: #dc3545;
            color: white;
        }

        .Failed {
            background-color: #000000;
            color: white;
        }

        .rep-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 8px 12px;
        }

        .rep-item-controls {
            display: flex;
            gap: 8px;
            align-items: center;
        }

        .rep-weight {
            font-weight: bold;
            margin-left: 5px;
        }

        #historyModal .modal-body {
            max-height: 70vh;
            overflow-y: auto;
        }

        #viewHistoryBtn {
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
            transition: all 0.3s ease;
        }

            #viewHistoryBtn:hover {
                transform: scale(1.1);
                box-shadow: 0 6px 12px rgba(0,0,0,0.3);
            }

        .workout-session-item {
            cursor: pointer;
            transition: background-color 0.2s;
        }

            .workout-session-item:hover {
                background-color: #f8f9fa;
            }

        .exercise-card {
            border-left: 4px solid #0d6efd;
        }

        .set-item {
            border-left: 3px solid #6c757d;
        }
    </style>
}

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        const gymConfig = {
            difficultyOptions: @Html.Raw(Json.Serialize(Model.DifficultyOptions)),
            antiforgeryToken: document.getElementById('__RequestVerificationToken').value
        };

        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/gymChatHub", {
                skipNegotiation: true,
                transport: signalR.HttpTransportType.WebSockets
            })
            .configureLogging(signalR.LogLevel.Information)
            .build();

        document.addEventListener("DOMContentLoaded", () => {
            Chat.initialize(connection);
            GymTracker.initialize(gymConfig);

            const chatCollapse = document.getElementById('chatCollapse');
            const toggleButton = document.getElementById('toggleChatBtn');
            const icon = toggleButton.querySelector('i');

            chatCollapse.addEventListener('show.bs.collapse', () => {
                icon.classList.replace('bi-chat-dots', 'bi-x');
            });

            chatCollapse.addEventListener('hide.bs.collapse', () => {
                icon.classList.replace('bi-x', 'bi-chat-dots');
            });

            if (document.getElementById("setWeightInput")) {
                document.getElementById("setWeightInput").value = "20";
            }
        });
    </script>
    <script src="~/js/chat.js" asp-append-version="true"></script>
    <script src="~/js/gymTracker.js" asp-append-version="true"></script>
}