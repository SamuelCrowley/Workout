@page
@using System.Text.Json
@using MeetUp.Views
@using Microsoft.AspNetCore.Antiforgery
@using static MeetUp.Enums.Enums
@inject IAntiforgery antiforgery
@model GymModel
@{
    ViewData["Title"] = "Chat";
}

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - MeetUp</title>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
</head>

<body>
    <input type="hidden" id="__RequestVerificationToken"
           name="__RequestVerificationToken"
           value="@antiforgery.GetAndStoreTokens(HttpContext).RequestToken">

    <div class="container-fluid px-0" style="height: calc(100vh - 150px);">

        <!-- Workout Tracker -->
        <div class="p-3 bg-light border-bottom">
            <h2 class="mb-0">Workout Tracker</h2>
        </div>
        <div id="gymTrackerContainer" class="flex-grow-1 overflow-auto">
            <div id="initialView" class="card m-3 shadow-sm">
                <div class="card-body text-center">
                    <h4 class="card-title">Ready to work out?</h4>
                    <p class="card-text">Track your progress by starting a workout session.</p>
                    <div class="mb-3" id="workoutNameContainer" style="display: none;">
                        <input type="text" id="workoutNameInput" class="form-control" placeholder="Workout name (e.g., Chest, Push, Legs)">
                    </div>
                    <button class="btn btn-success btn-lg" id="startWorkoutBtn" style="display: none;">
                        <i class="bi bi-play-circle"></i> Start Workout
                    </button>
                    <button class="btn btn-info btn-lg" id="createGymUserBtn" style="display: none;">
                        Create Gym Account
                    </button>
                </div>
            </div>

            <!-- Active Workout -->
            <div id="activeWorkoutView" class="card m-3 shadow-sm" style="display: none;">
                <div class="card-header bg-primary text-white p-3">
                    <div class="d-flex flex-column gap-3">
                        <div class="card bg-light">
                            <div class="card-body d-flex align-items-center justify-content-between px-3 py-2">
                                <h4 id="workoutNameDisplay" class="mb-0 text-truncate">Workout</h4>
                                <button id="endWorkoutBtn" class="btn btn-danger btn-sm">End Workout</button>
                            </div>
                        </div>
                        <div id="restTimerContainer" class="card bg-light" style="display: none;">
                            <div class="card-body d-flex align-items-center justify-content-between px-3 py-2">
                                <div class="d-flex align-items-center gap-2">
                                    <span>Rest:</span>
                                    <span id="restTimerDisplay" class="fw-bold">00:00</span>
                                </div>
                                <div class="d-flex align-items-center gap-2">
                                    <div class="btn-group">
                                        <button id="startRestTimerBtn" class="btn btn-sm btn-success">
                                            <i class="bi bi-play-fill"></i>
                                        </button>
                                        <button id="stopRestTimerBtn" class="btn btn-sm btn-danger">
                                            <i class="bi bi-stop-fill"></i>
                                        </button>
                                    </div>
                                    <select id="restTimerDuration" class="form-select form-select-sm" style="width: 80px;">
                                        <option value="30">0:30</option>
                                        <option value="60">1:00</option>
                                        <option value="90" selected>1:30</option>
                                        <option value="120">2:00</option>
                                        <option value="150">2:30</option>
                                        <option value="180">3:00</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card-body">
                    <div class="scroll-section">
                        <div class="row mb-4 g-3 justify-content-center">
                            <div class="col-5 text-center">
                                <div class="metric-card p-2 rounded">
                                    <h5>Duration</h5>
                                    <h3 id="workoutTimer">00:00:00</h3>
                                </div>
                            </div>
                            <div class="col-3 text-center">
                                <div class="metric-card p-2 rounded">
                                    <h5>Exercises</h5>
                                    <h3 id="exerciseCount">0</h3>
                                </div>
                            </div>
                            <div class="col-3 text-center">
                                <div class="metric-card p-2 rounded">
                                    <h5>Sets</h5>
                                    <h3 id="totalSets">0</h3>
                                </div>
                            </div>
                        </div>

                        <div class="swappable-Content">
                            <!-- Current Exercises -->
                            <div id="currentExercises" class="mb-4">
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <h5>Exercises</h5>
                                </div>
                                <div id="exercisesList" class="list-group"></div>

                                <div class="input-group">
                                    <input type="text" id="exerciseNameInput" class="form-control" placeholder="Exercise name (e.g., Bench Press)">
                                    <button id="addExerciseBtn" class="btn btn-primary">Add Exercise</button>
                                </div>
                            </div>

                            <!-- Exercise Detail -->
                            <div id="exerciseDetailView" style="display: none;">
                                @* <div class="card-header bg-secondary text-white d-flex justify-content-between align-items-center">
                                    <h4 id="exerciseDetailTitle" class="mb-0">Exercise Details</h4>
                                    <button id="backToWorkoutBtn" class="btn btn-light btn-sm">Back to Workout</button>
                                </div> *@

                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <h5 id="exerciseDetailTitle">Exercise Details</h5>
                                    <button id="backToWorkoutBtn" class="btn btn-light btn-sm">Back to Workout</button>
                                </div>

                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>Set</th>
                                            <th>Reps</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody id="setsTableBody"></tbody>
                                </table>
                                <div class="d-grid">
                                    <button id="addSetBtn" class="btn btn-primary">Add New Set</button>
                                </div>
                            </div>

                            <!-- Set Detail -->
                            <div id="setDetailView" style="display: none;">
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <h5 id="setDetailTitle">Exercise Details</h5>
                                    <button id="backToExercisesBtn" class="btn btn-light btn-sm">Back to Exercises</button>
                                </div>

                                <div class="mb-3">
                                    <label for="setWeightInput" class="form-label">Weight (kg)</label>
                                    <input type="number" id="setWeightInput" class="form-control" min="0" step="0.5" value="20">
                                </div>

                                <div class="mb-3">
                                    <h5>Repetitions</h5>
                                    <div class="row g-3 mb-3">
                                        <div class="col-md-3">
                                            <label for="repCountInput" class="form-label">Number of Reps</label>
                                            <select id="repCountInput" class="form-select">
                                                @for (int i = 1; i <= 20; i++)
                                                {
                                                    <option value="@i" selected="@(i == 6)">@i</option>
                                                }
                                            </select>
                                        </div>
                                        <div class="col-md-3">
                                            <label for="defaultDifficultyInput" class="form-label">Default Difficulty</label>
                                            <select id="defaultDifficultyInput" class="form-select">
                                                @foreach (var difficulty in Enum.GetValues(typeof(RepetitionDifficulty)))
                                                {
                                                    @if (difficulty.ToString() != "Unknown")
                                                    {
                                                        <option value="@difficulty" selected="@(difficulty.ToString() == "Moderate")">
                                                            @difficulty
                                                        </option>
                                                    }
                                                }
                                            </select>
                                        </div>
                                        <div class="col-md-3 d-flex align-items-end">
                                            <button id="addRepsBtn" class="btn btn-primary w-100">Add Reps</button>
                                        </div>
                                        <div class="col-md-3 d-flex align-items-end">
                                            <button id="clearRepsBtn" class="btn btn-outline-danger w-100">Clear All</button>
                                        </div>
                                    </div>
                                    <div id="repsList" class="list-group mb-3"></div>
                                </div>

                                <div class="d-grid">
                                    <button id="saveSetBtn" class="btn btn-success">Save Set</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- View Workout History Button -->
    <div class="position-fixed" style="bottom: 65px; right: 5px; z-index: 1000;">
        <button id="viewHistoryBtn"
                class="btn btn-info btn-lg rounded-circle"
                style="width: 60px; height: 60px;"
                data-bs-toggle="modal"
                data-bs-target="#historyModal"
                title="View Workout History">
            <i class="bi bi-clock-history"></i>
        </button>
    </div>

    <!-- Workout History Modal -->
    <div class="modal fade" id="historyModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Workout History</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="historyLoading" class="text-center">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                    </div>
                    <div id="historyContent" style="display: none;">
                        <ul id="workoutSessionsList" class="list-group mb-3"></ul>
                        <div id="workoutDetails" style="display: none;">
                            <h5>Session Details</h5>
                            <div id="sessionExercises" class="mt-3"></div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- View Chat Button -->
    <div class="position-fixed" style="bottom: 65px; right: 70px; z-index: 1000;">
        <button id="openChatBtn"
                class="btn btn-primary btn-lg rounded-circle"
                style="width: 60px; height: 60px;"
                data-bs-toggle="offcanvas" 
                data-bs-target="#chatOffcanvas"
                aria-controls="chatOffcanvas" 
                title="Open Chat">
            <i class="bi bi-chat-dots"></i>
        </button>
    </div>

    <div class="offcanvas offcanvas-end" tabindex="-1" id="chatOffcanvas" aria-labelledby="chatOffcanvasLabel">

        <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="chatOffcanvasLabel">Chat Room</h5>
            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
        </div>

        <div class="offcanvas-body d-flex flex-column">

            <div class="p-3 bg-light border-bottom flex-shrink-0">
                <h2 class="mb-0">Chat</h2>
            </div>

            <div class="flex-grow-1 overflow-hidden position-relative">
                <ul id="messagesList"
                    class="list-group h-100 overflow-auto m-0 rounded position-absolute w-100" /* Adjusted margin (m-0) * /
                    style="border: 1px solid #dee2e6; top: 0; left: 0; right: 0; bottom: 0;">
                </ul>
            </div>

            <div class="input-group p-3 border-top flex-shrink-0">
                <input id="messageInput" type="text" class="form-control" placeholder="Type a message" />
                <button id="sendMessageBtn" class="btn btn-primary">
                    <i class="bi bi-send"></i>
                </button>
            </div>

        </div>
    </div>
</body>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        const gymConfig = {
            difficultyOptions: @Html.Raw(Json.Serialize(Model.DifficultyOptions)),
            antiforgeryToken: document.getElementById('__RequestVerificationToken').value
        };

        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/gymChatHub", {
                skipNegotiation: true,
                transport: signalR.HttpTransportType.WebSockets
            })
            .configureLogging(signalR.LogLevel.Information)
            .build();

        document.addEventListener("DOMContentLoaded", () => {
            Chat.initialize(connection);
            GymTracker.initialize(gymConfig);
        });
    </script>
    <script src="~/js/chat.js" asp-append-version="true"></script>
    <script src="~/js/gymTracker.js" asp-append-version="true"></script>
}